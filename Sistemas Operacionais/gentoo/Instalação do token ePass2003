#Token ePass2003

#Fonte:
https://cleitonbueno.com/linux-o-poderoso-udev/

#Investigando, com o udev, o que acontece ao colocar e retirar o token da porta USB
-->
sudo udevadm monitor -k -p -s usb

monitor will print the received events for:
KERNEL - the kernel uevent

KERNEL[4026.463230] remove   /devices/pci0000:00/0000:00:14.0/usb3/3-1/3-1:1.0 (usb)
ACTION=remove
DEVPATH=/devices/pci0000:00/0000:00:14.0/usb3/3-1/3-1:1.0
DEVTYPE=usb_interface
INTERFACE=11/0/0
MODALIAS=usb:v096Ep0807d0110dc00dsc00dp00ic0Bisc00ip00in00
PRODUCT=96e/807/110
SEQNUM=3266
SUBSYSTEM=usb
TYPE=0/0/0

KERNEL[4026.463464] unbind   /devices/pci0000:00/0000:00:14.0/usb3/3-1 (usb)
ACTION=unbind
BUSNUM=003
DEVNAME=/dev/bus/usb/003/004
DEVNUM=004
DEVPATH=/devices/pci0000:00/0000:00:14.0/usb3/3-1
DEVTYPE=usb_device
MAJOR=189
MINOR=259
PRODUCT=96e/807/110
SEQNUM=3267
SUBSYSTEM=usb
TYPE=0/0/0

KERNEL[4026.463529] remove   /devices/pci0000:00/0000:00:14.0/usb3/3-1 (usb)
ACTION=remove
BUSNUM=003
DEVNAME=/dev/bus/usb/003/004
DEVNUM=004
DEVPATH=/devices/pci0000:00/0000:00:14.0/usb3/3-1
DEVTYPE=usb_device
MAJOR=189
MINOR=259
PRODUCT=96e/807/110
SEQNUM=3268
SUBSYSTEM=usb
TYPE=0/0/0

KERNEL[4033.838509] add      /devices/pci0000:00/0000:00:14.0/usb3/3-1 (usb)
ACTION=add
BUSNUM=003
DEVNAME=/dev/bus/usb/003/005
DEVNUM=005
DEVPATH=/devices/pci0000:00/0000:00:14.0/usb3/3-1
DEVTYPE=usb_device
MAJOR=189
MINOR=260
PRODUCT=96e/807/110
SEQNUM=3269
SUBSYSTEM=usb
TYPE=0/0/0

KERNEL[4033.839154] add      /devices/pci0000:00/0000:00:14.0/usb3/3-1/3-1:1.0 (usb)
ACTION=add
DEVPATH=/devices/pci0000:00/0000:00:14.0/usb3/3-1/3-1:1.0
DEVTYPE=usb_interface
INTERFACE=11/0/0
MODALIAS=usb:v096Ep0807d0110dc00dsc00dp00ic0Bisc00ip00in00
PRODUCT=96e/807/110
SEQNUM=3270
SUBSYSTEM=usb
TYPE=0/0/0

KERNEL[4033.839214] bind     /devices/pci0000:00/0000:00:14.0/usb3/3-1 (usb)
ACTION=bind
BUSNUM=003
DEVNAME=/dev/bus/usb/003/005
DEVNUM=005
DEVPATH=/devices/pci0000:00/0000:00:14.0/usb3/3-1
DEVTYPE=usb_device
DRIVER=usb
MAJOR=189
MINOR=260
PRODUCT=96e/807/110
SEQNUM=3271
SUBSYSTEM=usb
TYPE=0/0/0
<--

#Outros comando possíveis, sempre com o udev:
-->
sudo udevadm monitor --kernel (ou) --udev

monitor will print the received events for:
KERNEL - the kernel uevent

KERNEL[4337.795663] remove   /devices/pci0000:00/0000:00:14.0/usb3/3-1/3-1:1.0 (usb)
KERNEL[4337.795906] unbind   /devices/pci0000:00/0000:00:14.0/usb3/3-1 (usb)
KERNEL[4337.795942] remove   /devices/pci0000:00/0000:00:14.0/usb3/3-1 (usb)
KERNEL[4341.200425] add      /devices/pci0000:00/0000:00:14.0/usb3/3-1 (usb)
KERNEL[4341.201018] add      /devices/pci0000:00/0000:00:14.0/usb3/3-1/3-1:1.0 (usb)
KERNEL[4341.201067] bind     /devices/pci0000:00/0000:00:14.0/usb3/3-1 (usb)
<--

#Obs.:Com o resultado de um desses três comando acima você tem que descobrir como o kernel identifica o seu dispositivo.

#Obs.: No meu caso eu descobri que o meu dispositivo era identificado pelo kernel em /dev/bus/usb/003/004

#Após identificar, com a ajuda do udev, qual o seu dispositivo, hora de saber todos os detalhes sobre ele.
->
sudo udevadm info --query=all --name=/dev/bus/usb/003/004

P: /devices/pci0000:00/0000:00:14.0/usb3/3-1
N: bus/usb/003/004
S: ePass20031
E: BUSNUM=003
E: DEVLINKS=/dev/ePass20031
E: DEVNAME=/dev/bus/usb/003/004
E: DEVNUM=004
E: DEVPATH=/devices/pci0000:00/0000:00:14.0/usb3/3-1
E: DEVTYPE=usb_device
E: DRIVER=usb
E: ID_BUS=usb
E: ID_MODEL=USB_Token
E: ID_MODEL_ENC=USB\x20Token
E: ID_MODEL_FROM_DATABASE=ePass2003
E: ID_MODEL_ID=0807
E: ID_REVISION=0110
E: ID_SERIAL=FS_USB_Token
E: ID_USB_INTERFACES=:0b0000:
E: ID_VENDOR=FS
E: ID_VENDOR_ENC=FS
E: ID_VENDOR_FROM_DATABASE=Feitian Technologies, Inc.
E: ID_VENDOR_ID=096e
E: MAJOR=189
E: MINOR=259
E: PRODUCT=96e/807/110
E: SUBSYSTEM=usb
E: TYPE=0/0/0
E: USEC_INITIALIZED=2229424749
<--

#Mais detalhes... com a opção --attribute-walk
Obs.: O comando abaixo mostra informações de todos os dispositivos conectados ao PC, não apenas de dispositivos USB.

-->
sudo udevadm info --attribute-walk --name=/dev/bus/usb/003/004

Udevadm info starts with the device specified by the devpath and then
walks up the chain of parent devices. It prints for every device
found, all possible attributes in the udev rules key format.
A rule to match, can be composed by the attributes of the device
and the attributes from one single parent device.

  looking at device '/devices/pci0000:00/0000:00:14.0/usb3/3-1':
    KERNEL=="3-1"
    SUBSYSTEM=="usb"
    DRIVER=="usb"
    ATTR{configuration}==""
    ATTR{bMaxPacketSize0}=="16"
    ATTR{bDeviceClass}=="00"
    ATTR{bcdDevice}=="0110"
    ATTR{bNumInterfaces}==" 1"
    ATTR{bConfigurationValue}=="1"
    ATTR{manufacturer}=="FS"
    ATTR{bNumConfigurations}=="1"
    ATTR{authorized}=="1"
    ATTR{speed}=="12"
    ATTR{idProduct}=="0807"
    ATTR{urbnum}=="8"
    ATTR{devnum}=="4"
    ATTR{product}=="USB Token"
    ATTR{maxchild}=="0"
    ATTR{bmAttributes}=="80"
    ATTR{bDeviceSubClass}=="00"
    ATTR{bMaxPower}=="100mA"
    ATTR{rx_lanes}=="1"
    ATTR{removable}=="removable"
    ATTR{idVendor}=="096e"
    ATTR{version}==" 1.10"
    ATTR{avoid_reset_quirk}=="0"
    ATTR{bDeviceProtocol}=="00"
    ATTR{tx_lanes}=="1"
    ATTR{ltm_capable}=="no"
    ATTR{devpath}=="1"
    ATTR{busnum}=="3"
    ATTR{quirks}=="0x0"

looking at parent device '/devices/pci0000:00/0000:00:14.0/usb3':
    KERNELS=="usb3"
    SUBSYSTEMS=="usb"
    DRIVERS=="usb"
    ATTRS{configuration}==""
    ATTRS{bMaxPacketSize0}=="64"
    ATTRS{bDeviceClass}=="09"
    ATTRS{bcdDevice}=="0504"
    ATTRS{bNumInterfaces}==" 1"
    ATTRS{bConfigurationValue}=="1"
    ATTRS{manufacturer}=="Linux 5.4.38-gentoo xhci-hcd"
    ATTRS{bNumConfigurations}=="1"
    ATTRS{authorized}=="1"
    ATTRS{speed}=="480"
    ATTRS{idProduct}=="0002"
    ATTRS{urbnum}=="58"
    ATTRS{devnum}=="1"
    ATTRS{product}=="xHCI Host Controller"
    ATTRS{maxchild}=="4"
    ATTRS{bmAttributes}=="e0"
    ATTRS{bDeviceSubClass}=="00"
    ATTRS{bMaxPower}=="0mA"
    ATTRS{rx_lanes}=="1"
    ATTRS{removable}=="unknown"
    ATTRS{idVendor}=="1d6b"
    ATTRS{interface_authorized_default}=="1"
    ATTRS{authorized_default}=="1"
    ATTRS{version}==" 2.00"
    ATTRS{avoid_reset_quirk}=="0"
    ATTRS{serial}=="0000:00:14.0"
    ATTRS{bDeviceProtocol}=="01"
    ATTRS{tx_lanes}=="1"
    ATTRS{ltm_capable}=="no"
    ATTRS{devpath}=="0"
    ATTRS{busnum}=="3"
    ATTRS{quirks}=="0x0"

looking at parent device '/devices/pci0000:00/0000:00:14.0':
    KERNELS=="0000:00:14.0"
    SUBSYSTEMS=="pci"
    DRIVERS=="xhci_hcd"
    ATTRS{broken_parity_status}=="0"
    ATTRS{subsystem_device}=="0x0548"
    ATTRS{dma_mask_bits}=="64"
    ATTRS{vendor}=="0x8086"
    ATTRS{local_cpus}=="f"
    ATTRS{class}=="0x0c0330"
    ATTRS{numa_node}=="-1"
    ATTRS{msi_bus}=="1"
    ATTRS{device}=="0x1e31"
    ATTRS{local_cpulist}=="0-3"
    ATTRS{driver_override}=="(null)"
    ATTRS{d3cold_allowed}=="1"
    ATTRS{irq}=="30"
    ATTRS{revision}=="0x04"
    ATTRS{consistent_dma_mask_bits}=="64"
    ATTRS{ari_enabled}=="0"
    ATTRS{enable}=="1"
    ATTRS{subsystem_vendor}=="0x1028"

  looking at parent device '/devices/pci0000:00':
    KERNELS=="pci0000:00"
    SUBSYSTEMS==""
    DRIVERS==""
<--

#De posse de todas as informações sobre seu dispositivo, que no meu caso é um token USB, é hora de criar uma regra para ele no sistema. Os diretórios corretos para isso são: /etc/udev/rules.d/ (ou) /run/udev/rules.d. No meu caso eu criei nos dois diretórios.
-->
sudo vim /etc/udev/rules.d/10-ePass2003.rules

KERNEL=="3-1"
SUBSYSTEM=="usb"
DRIVER=="usb"
ACTION=="add"
ATTRS{idVendor}=="096e"
ATTRS{version}==" 1.10"
ATTRS{manufacturer}=="FS"
ATTRS{idProduct}=="0807"
ATTRS{product}=="USB Token"
MODE="666"
SYMLINK+="ePass2003%n"
<--

#O arquivo acima dever, por si só, setar sua permissão para 666 e criar um symlink, mas eu resolvi setar as permissões manualmente:
-->
sudo chmod 666 /etc/udev/rules.d/50-ePass2003.rules
<--

#Vamos aplicar a nossa regra sem ter que reiniciar, recarregando com o comando abaixo:
-->
sudo udevadm control --reload-rules
<--

#Isso resolveu o meu problema.
